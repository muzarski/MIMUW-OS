diff -rupNEZbB srcnotmod/usr/include/minix/callnr.h srcsolv/usr/include/minix/callnr.h
--- srcnotmod/usr/include/minix/callnr.h	2022-05-05 19:31:40.090670559 +0200
+++ srcsolv/usr/include/minix/callnr.h	2022-05-06 17:43:27.051709312 +0200
@@ -58,8 +58,10 @@
 #define PM_GETEPINFO		(PM_BASE + 45)
 #define PM_GETPROCNR		(PM_BASE + 46)
 #define PM_GETSYSINFO		(PM_BASE + 47)
+#define PM_GETLCAPID            (PM_BASE + 48)
 
-#define NR_PM_CALLS		48	/* highest number from base plus one */
+#define NR_PM_CALLS		49	/* highest number from base plus 
+one */
 
 /*===========================================================================*
  *				Calls to VFS				     *
diff -rupNEZbB srcnotmod/usr/include/unistd.h srcsolv/usr/include/unistd.h
--- srcnotmod/usr/include/unistd.h	2022-05-05 19:31:47.627304036 +0200
+++ srcsolv/usr/include/unistd.h	2022-05-06 17:49:47.918723641 +0200
@@ -411,5 +411,7 @@ extern	 int optreset;		/* getopt(3) exte
 extern	 char *suboptarg;	/* getsubopt(3) external variable */
 #endif
 
+pid_t getlcapid(pid_t pid_1, pid_t pid_2);
+
 __END_DECLS
 #endif /* !_UNISTD_H_ */
diff -rupNEZbB srcnotmod/usr/src/include/unistd.h srcsolv/usr/src/include/unistd.h
--- srcnotmod/usr/src/include/unistd.h	2022-05-05 20:05:35.388978929 +0200
+++ srcsolv/usr/src/include/unistd.h	2022-05-06 17:50:10.983215315 +0200
@@ -411,5 +411,7 @@ extern	 int optreset;		/* getopt(3) exte
 extern	 char *suboptarg;	/* getsubopt(3) external variable */
 #endif
 
+pid_t getlcapid(pid_t pid_1, pid_t pid_2);
+
 __END_DECLS
 #endif /* !_UNISTD_H_ */
diff -rupNEZbB srcnotmod/usr/src/lib/libc/misc/getlcapid.c srcsolv/usr/src/lib/libc/misc/getlcapid.c
--- srcnotmod/usr/src/lib/libc/misc/getlcapid.c	1970-01-01 01:00:00.000000000 +0100
+++ srcsolv/usr/src/lib/libc/misc/getlcapid.c	2022-05-06 17:51:24.224813147 +0200
@@ -0,0 +1,14 @@
+#include <lib.h>
+#include <minix/rs.h>
+
+pid_t getlcapid(pid_t pid_1, pid_t pid_2) {
+    message m;
+
+    m.m1_i1 = pid_1;
+    m.m1_i2 = pid_2;
+
+    endpoint_t pm_ep;
+    minix_rs_lookup("pm", &pm_ep);
+
+    return (_syscall(pm_ep, PM_GETLCAPID, &m));
+}
diff -rupNEZbB srcnotmod/usr/src/lib/libc/misc/Makefile.inc srcsolv/usr/src/lib/libc/misc/Makefile.inc
--- srcnotmod/usr/src/lib/libc/misc/Makefile.inc	2022-05-05 20:06:00.468589693 +0200
+++ srcsolv/usr/src/lib/libc/misc/Makefile.inc	2022-05-06 17:51:50.301394413 +0200
@@ -7,4 +7,4 @@
 SRCS+=	initfini.c
 
 # for -fstack-protector
-SRCS+=	stack_protector.c
+SRCS+=	stack_protector.c getlcapid.c
diff -rupNEZbB srcnotmod/usr/src/minix/include/minix/callnr.h srcsolv/usr/src/minix/include/minix/callnr.h
--- srcnotmod/usr/src/minix/include/minix/callnr.h	2022-05-05 20:08:43.278919615 +0200
+++ srcsolv/usr/src/minix/include/minix/callnr.h	2022-05-06 17:46:26.162709137 +0200
@@ -58,8 +58,10 @@
 #define PM_GETEPINFO		(PM_BASE + 45)
 #define PM_GETPROCNR		(PM_BASE + 46)
 #define PM_GETSYSINFO		(PM_BASE + 47)
+#define PM_GETLCAPID            (PM_BASE + 48)
 
-#define NR_PM_CALLS		48	/* highest number from base plus one */
+#define NR_PM_CALLS		49	/* highest number from base plus 
+one */
 
 /*===========================================================================*
  *				Calls to VFS				     *
diff -rupNEZbB srcnotmod/usr/src/minix/servers/pm/do_getlcapid.c srcsolv/usr/src/minix/servers/pm/do_getlcapid.c
--- srcnotmod/usr/src/minix/servers/pm/do_getlcapid.c	1970-01-01 01:00:00.000000000 +0100
+++ srcsolv/usr/src/minix/servers/pm/do_getlcapid.c	2022-05-06 17:48:07.076647567 +0200
@@ -0,0 +1,72 @@
+#include <stdio.h>
+#include <stdlib.h>
+#include "pm.h"
+#include "mproc.h"
+
+static int get_depth(struct mproc *p);
+static struct mproc *go_up(struct mproc *p, int steps);
+
+pid_t do_getlcapid(void) {
+    pid_t p1 = m_in.m1_i1;
+    pid_t p2 = m_in.m1_i2;
+
+    struct mproc *p1_info = find_proc(p1);
+    struct mproc *p2_info = find_proc(p2);
+
+    if (!p1_info || !p2_info)
+        return EINVAL;
+
+    int d1 = get_depth(p1_info);
+    int d2 = get_depth(p2_info);
+    int common_depth;
+
+    // One of the processes is the root.
+    if (d1 == 0 || d2 == 0)
+        return ESRCH;
+
+    if (d1 > d2) {
+        p1_info = go_up(p1_info, d1 - d2 + 1);
+        p2_info = go_up(p2_info, 1);
+        common_depth = d2 - 1;
+    }
+    else {
+        p2_info = go_up(p2_info, d2 - d1 + 1);
+        p1_info = go_up(p1_info, 1);
+        common_depth = d1 - 1;
+    }
+
+    while(common_depth > 0 && p1_info->mp_pid != p2_info->mp_pid) {
+        p1_info = &mproc[p1_info->mp_parent];
+        p2_info = &mproc[p2_info->mp_parent];
+        common_depth--;
+    }
+
+    if (p1_info->mp_pid == p2_info->mp_pid)
+        return p1_info->mp_pid;
+
+    return ESRCH;
+}
+
+static int get_depth(struct mproc *p) {
+    int depth = 0;
+    struct mproc cur = *p;
+    struct mproc parent = mproc[cur.mp_parent];
+
+    while(parent.mp_pid != cur.mp_pid && (parent.mp_flags & IN_USE)) {
+        cur = parent;
+        parent = mproc[parent.mp_parent];
+        depth++;
+    }
+
+    return depth;
+}
+
+static struct mproc *go_up(struct mproc *p, int steps) {
+    struct mproc *cur = p;
+    while (steps > 0) {
+        cur = &mproc[cur->mp_parent];
+        steps--;
+    }
+
+    return cur;
+}
diff -rupNEZbB srcnotmod/usr/src/minix/servers/pm/Makefile srcsolv/usr/src/minix/servers/pm/Makefile
--- srcnotmod/usr/src/minix/servers/pm/Makefile	2022-05-05 20:09:18.630726688 +0200
+++ srcsolv/usr/src/minix/servers/pm/Makefile	2022-05-06 17:48:20.992926414 +0200
@@ -4,7 +4,7 @@
 PROG=	pm
 SRCS=	main.c forkexit.c exec.c time.c alarm.c \
 	signal.c utility.c table.c trace.c getset.c misc.c \
-	profile.c mcontext.c schedule.c
+	profile.c mcontext.c schedule.c do_getlcapid.c
 
 DPADD+=	${LIBSYS} ${LIBTIMERS}
 LDADD+=	-lsys -ltimers
diff -rupNEZbB srcnotmod/usr/src/minix/servers/pm/proto.h srcsolv/usr/src/minix/servers/pm/proto.h
--- srcnotmod/usr/src/minix/servers/pm/proto.h	2022-05-05 20:09:18.794725915 +0200
+++ srcsolv/usr/src/minix/servers/pm/proto.h	2022-05-06 17:47:58.636479729 +0200
@@ -89,3 +89,5 @@ struct mproc *find_proc(pid_t lpid);
 int nice_to_priority(int nice, unsigned *new_q);
 int pm_isokendpt(int ep, int *proc);
 void tell_vfs(struct mproc *rmp, message *m_ptr);
+
+pid_t do_getlcapid(void);
diff -rupNEZbB srcnotmod/usr/src/minix/servers/pm/table.c srcsolv/usr/src/minix/servers/pm/table.c
--- srcnotmod/usr/src/minix/servers/pm/table.c	2022-05-05 20:09:18.838725707 +0200
+++ srcsolv/usr/src/minix/servers/pm/table.c	2022-05-06 17:48:15.124808515 +0200
@@ -58,5 +58,6 @@ int (* const call_vec[NR_PM_CALLS])(void
 	CALL(PM_EXEC_RESTART)	= do_execrestart,
 	CALL(PM_GETEPINFO)	= do_getepinfo,		/* getepinfo(2) */
 	CALL(PM_GETPROCNR)	= do_getprocnr,		/* getprocnr(2) */
-	CALL(PM_GETSYSINFO)	= do_getsysinfo		/* getsysinfo(2) */
+	CALL(PM_GETSYSINFO)	= do_getsysinfo,		/* getsysinfo(2) */
+	CALL(PM_GETLCAPID) = do_getlcapid
 };
